[
  {
    "title": "Announcement! You can view and download my CV online",
    "description": "My CV is now available from this website, please do check it out.",
    "projectShortName": "",
    "content": "<p>Hey! ðŸ‘‹</p>\n<p>This is just a quick note to let you know that you can find my <a href=\"/cv\">CV online here</a>.</p>\n<p>I am a self taught web developer who is looking for opportunities in a technical role. I have four years experience in Product and UX, and I am proficient in Typescript, React, and a variety of Javascript runtimes. If you like what you see, do let me know and lets connect!</p>",
    "coverImageUrl": "https://images.unsplash.com/photo-1581291518857-4e27b48ff24e?q=80&w=2970&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
    "date": "2024-03-20",
    "author": {
      "name": "Callum Kloos",
      "imageUrl": "/avatar-scaled.jpg"
    },
    "tags": [],
    "slug": "announcement-you-can-view-and-download-my-cv-online"
  },
  {
    "title": "Introducing playQ: A Cutting-Edge Videogame Playlist Manager",
    "description": "playQ is a groundbreaking application designed to revolutionize the way gamers organize and share their video game collections. Leveraging the latest technologies, playQ offers an unparalleled experience for managing and exploring video game playlists.",
    "projectShortName": "playq",
    "content": "<p>At its core, <a href=\"/projects/playq-videogame-playlist-manager\">playQ</a>  is a sophisticated game management platform that empowers users to create, curate, and share personalized playlists of video games. With an intuitive interface and robust feature set, playQ redefines the way gamers interact with their collections, fostering a more immersive and social gaming experience.</p>\n<p>One of playQ's standout features is its comprehensive rating system, enabling users to assign personal ratings to games within their playlists. This powerful functionality not only allows for in-depth comparisons between titles but also facilitates informed decision-making when selecting the next game to play.</p>\n<p>Additionally, playQ seamlessly integrates social networking capabilities, enabling users to share their meticulously crafted playlists with friends or the broader gaming community. This feature promotes game discovery, fosters meaningful discussions, and cultivates a vibrant community of passionate gamers.\nA Cutting-Edge Tech Stack for an Exceptional User Experience</p>\n<p>playQ is more than just a game playlist manager; it is a testament to the power of modern web development technologies. The application's architecture is built upon a robust stack of industry-leading frameworks and libraries, ensuring optimal performance, scalability, and user experience.</p>\n<p>Supabase: At the core of playQ lies Supabase, an open-source Firebase alternative that provides seamless authentication and database management. Supabase replicates many of Firebase's features, such as real-time subscriptions and auto-generated APIs, while offering the versatility and power of PostgreSQL.</p>\n<p>Remix and React: The user interface (UI), routing, and data loading are powered by the dynamic duo of Remix and React. Remix is a cutting-edge web framework for React that prioritizes user experience, while React facilitates the efficient development of reusable UI components.</p>\n<p>DrizzleORM: playQ's Object-Relational Mapping (ORM) is handled by DrizzleORM, a powerful tool that maps JavaScript objects to database tables, simplifying data operations like inserting, updating, or querying.</p>\n<p>Radix-UI and Shad/cn Inspired Components: To further elevate the user experience, playQ incorporates Radix-UI, a library of low-level, accessible, and unstyled UI components designed for building high-quality web interfaces. The application's UI design is also influenced by the modern and minimalist aesthetic of ShaD/CN styled-components.</p>\n<p>By leveraging this carefully curated tech stack, playQ showcases how sophisticated technologies can be combined to deliver efficient coding practices, superior performance, and an unparalleled user experience.</p>",
    "coverImageUrl": "/images/projects/playq/1.png",
    "date": "2024-02-25",
    "author": {
      "name": "Callum Kloos",
      "imageUrl": "/avatar.jpeg"
    },
    "tags": [
      "playQ"
    ],
    "slug": "introducing-playq-a-cuttingedge-videogame-playlist-manager"
  },
  {
    "title": "Using Notion as a Simple Content Management System",
    "description": "This Little Piggy required a simple yet flexible content management solution on a small scale. Notion ticked all the boxes.",
    "projectShortName": "thislittlepiggyrichmond",
    "content": "<p>When designing the new website for <a href=\"/projects/this-little-piggy-richmond\">This Little Piggy Richmond</a> , a non-profit organisation dedicated to rehoming guinea pigs, the top priority was a simple and efficient system for adding content to the website. The organisation needed a solution that allowed them to move quickly without being bogged down by complex processes or systems prone to errors and frustration. The website is a crucial part of their work, and the ability to update it promptly was key.</p>\n<h2>The Challenge: High Turnover and Cute Content</h2>\n<p>This Little Piggy Richmond experiences a high turnover of guinea pigs due to the need for pairing, partnering, new arrivals, and high levels of pregnancy. As a result, they required a website that could showcase the cuteness factor of these animals while ensuring that the content remained as up-to-date as possible.</p>\n<h2>The Solution: Notion as a Backend</h2>\n<p>Initially, we considered creating an admin panel tool alongside the public website, allowing the organisation to update the database directly. However, we decided against this approach for several reasons:</p>\n<ol>\n<li><strong>Increased Workload</strong>: Building an admin panel would have doubled the amount of work required, and the need for a new website was urgent.</li>\n<li><strong>Lack of Flexibility</strong>: An admin panel might have been too inflexible during the early stages, where iterations and changes were likely to occur.</li>\n</ol>\n<p>After exploring various options, we had the idea of using Notion as the backend, with all data presented on the front-end being pulled directly from Notion.</p>\n<h2>Considerations and Challenges</h2>\n<p><strong>Open Schema</strong>: Notion has a very flexible and lax data model, as expected from a product of its kind. To ensure data integrity, we had to implement strict measures to lock down the databases that touched the front-end, preventing schema changes. Additionally, we needed to handle any potential issues gracefully on the front-end to maintain the application's availability.</p>\n<p><strong>Dynamic vs. Static</strong>: As the ability to quickly change content on the front-end was crucial for the client, rendering pages dynamically on each visit was the preferred approach. However, it was essential to consider the issue of 'live' data being pulled from Notion before it was ready for publication.</p>\n<p><strong>Data Ownership</strong>: One potential risk of this solution was the ownership of the data. Since Notion is not designed as a database, there was a possibility that they could revoke API access or change their terms to disallow this use case. To mitigate this risk, we implemented data backups and ensured a clear path for data portability.</p>\n<h2>Implementation Details</h2>\n<p><strong>Graceful Error Handling and Fallback Data</strong>: To handle cases where the client had incomplete data in the Notion database, we implemented a solution where our components could handle missing data gracefully. This approach provided informative feedback to the client, allowing them to identify and rectify missing data issues without crashing the entire site.</p>\n<p><strong>Data Syncing</strong>: To ensure data integrity and mitigate potential risks, we set up a daily backup process that synchronised data from Notion to a SQLite database. This backup would enable us to migrate to a different solution if necessary.</p>\n<p><strong>Mark as Ready</strong>: To prevent accidental publishing of incomplete or unready data, we implemented a tagging system in Notion. Only data marked as \"website-ready\" would be pulled and displayed on the front-end.</p>\n<p>By leveraging Notion as the backend and implementing these measures, we were able to provide <a href=\"/projects/this-little-piggy-richmond\">This Little Piggy Richmond</a> with a simple and efficient content management system that met their needs for promptly updating their website with the latest adorable guinea pig content.</p>",
    "coverImageUrl": "https://static0.makeuseofimages.com/wordpress/wp-content/uploads/2021/02/Notion-logo-1.png",
    "date": "2024-02-14",
    "author": {
      "name": "Callum Kloos",
      "imageUrl": "/avatar.jpeg"
    },
    "tags": [
      "web development",
      "backend"
    ],
    "slug": "using-notion-as-a-simple-content-management-system"
  },
  {
    "title": "An Open Letter to Potential Recruiters",
    "description": "Thank you for stopping by! If you have not read my bespoke cover letter yet, then please enjoy this open letter instead",
    "content": "<p>Dear Potential Employer</p>\n<p>Thank you for showing interest in my application, and welcome to my portfolio. With my multifaceted background in <em>product management</em>, <em>user experience design</em>, mechanical engineering, and <em>web development</em>, complemented by my passion for learning and continuous growth, I am confident in my ability to contribute positively to your team.</p>\n<p>During the last year and a half, I've dedicated my time to learning web development and have developed a proficiency in JavaScript, TypeScript, React, the Remix Framework, Next.js to a lesser extent, and currently experimenting with Hono Framework for lightweight data APIs. The culmination of my effort is evident in two apps I conceptualised and developed. The first app - PlayQ is a full-stack web application for sharing video game playlists with enhanced interactivity, the other being a dynamic content module for a local charity.</p>\n<p>My previous role as a Product Manager and UX Designer has given me invaluable experience working in agile environments, understanding the technical nuances from a development perspective, and leading cross-functional teams to deliver projects efficiently. My innate empathy aids in building productive relationships fostering a cooperative work culture.</p>\n<p>I strongly believe that the skills I garnered from my former roles, augmented by my recent foray into web development, will provide a unique standpoint combining technical, design, and product management perspectives critical for a Web Development role.</p>\n<p>With an unwavering enthusiasm for embracing newer technologies, contributing to open-source documentation, and exposing myself to system-level languages such as Rust and Go on the side, I am certain I will bring a proactive, learning mindset to.. Your Companyâ„¢.</p>\n<p>Given the opportunity, I look forward to leveraging my skills and experiences to support Your Companyâ„¢ in achieving its operational and strategic goals while fostering my professional growth as a web developer.</p>\n<p>Thank you for considering my application. I look forward to the possibility of discussing this exciting opportunity with you.</p>\n<p>Sincerely,</p>\n<p><strong><em>Callum Kloos</em></strong></p>",
    "coverImageUrl": "https://images.unsplash.com/photo-1483389127117-b6a2102724ae?q=80&w=3348&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
    "date": "2024-03-07",
    "author": {
      "name": "Callum Kloos",
      "imageUrl": "/avatar.jpeg"
    },
    "tags": [
      "web development"
    ],
    "slug": "an-open-letter-to-potential-recruiters"
  },
  {
    "title": "Unleashing the Power of Supabase with playQ: A Game-Changing Video Game Playlist Manager",
    "description": "Explore how playQ leverages Supabase, an open-source Firebase alternative, to deliver a seamless and immersive video game playlist management experience.",
    "projectShortName": "playq",
    "content": "<p>As technology continues to shape the gaming landscape, developers are constantly seeking innovative solutions to enhance the user experience. Enter <a href=\"https://playq.xyz\">playQ</a>, a cutting-edge video game playlist manager that harnesses the power of Supabase, an open-source Firebase alternative, to deliver a seamless and immersive gaming experience.</p>\n<h3>Introduction to Supabase</h3>\n<p>Supabase is a robust and versatile platform that offers a comprehensive suite of tools and services for building modern web and mobile applications. At its core, Supabase provides a highly scalable and secure PostgreSQL database, coupled with a robust authentication system and real-time subscriptions. One of the key advantages of Supabase is its seamless integration with existing web development tools and frameworks, making it an ideal choice for developers seeking a powerful and flexible backend solution.</p>\n<h3>Integrating Supabase with playQ</h3>\n<p>playQ leverages Supabase as the backbone of its game management platform, enabling users to create, curate, and share personalized playlists of video games. By harnessing Supabase's authentication and database management capabilities, playQ offers a secure and reliable environment for storing and managing user data, game information, and playlist configurations.</p>\n<p><img src=\"/images/projects/playq/1.png\" alt=\"&#x22;playq screenshot&#x22;\"></p>\n<p>Here's a glimpse of how Supabase powers the core functionality of playQ:</p>\n<ol>\n<li>\n<p><strong>User Authentication</strong>: Supabase's built-in authentication system simplifies the process of managing user accounts, ensuring secure access to personalized playlists and game collections. This feature allows users to seamlessly sign up, log in, and manage their profiles within the playQ platform.</p>\n</li>\n<li>\n<p><strong>Game and Playlist Management</strong>: The PostgreSQL database provided by Supabase serves as the central repository for storing and managing game data, user playlists, and associated metadata. With its powerful querying capabilities, playQ can efficiently retrieve and manipulate game information, enabling users to search, filter, and sort their collections with ease.</p>\n</li>\n<li>\n<p><strong>Real-Time Updates</strong>: Supabase's real-time subscription feature enables playQ to deliver instant updates and notifications to users. Whether it's adding a new game to a playlist, receiving recommendations from friends, or tracking progress on shared gaming experiences, real-time updates ensure a dynamic and engaging user experience.</p>\n</li>\n</ol>\n<h3>Leveraging Supabase's Auto-Generated APIs</h3>\n<p>One of the standout features of Supabase is its ability to automatically generate APIs based on the database schema. This feature significantly streamlines the development process by eliminating the need to manually create and maintain complex backend APIs.</p>\n<p>In playQ, the auto-generated APIs are utilized to perform various operations, such as:</p>\n<ul>\n<li>Fetching game data and user playlists</li>\n<li>Creating, updating, and deleting playlists and game entries</li>\n<li>Querying and filtering games based on user preferences and search criteria</li>\n</ul>\n<p>Here's an example of how playQ utilizes Supabase's auto-generated APIs to fetch a user's playlists:</p>\n<pre class=\"shiki houston\" style=\"background-color:#17191e;color:#eef0f9\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#54B9FF\">import</span><span style=\"color:#EEF0F9\"> { </span><span style=\"color:#4BF3C8\">createClient</span><span style=\"color:#EEF0F9\"> } </span><span style=\"color:#54B9FF\">from</span><span style=\"color:#FFD493\"> '@supabase/auth-helpers-remix'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#54B9FF\">const</span><span style=\"color:#ACAFFF\"> supabaseClient</span><span style=\"color:#EEF0F9\"> = </span><span style=\"color:#00DAEF\">createClient</span><span style=\"color:#EEF0F9\">({</span></span>\n<span class=\"line\"><span style=\"color:#4BF3C8\">  url</span><span style=\"color:#EEF0F9\">: </span><span style=\"color:#4BF3C8\">process</span><span style=\"color:#EEF0F9\">.</span><span style=\"color:#4BF3C8\">env</span><span style=\"color:#EEF0F9\">.</span><span style=\"color:#ACAFFF\">SUPABASE_URL</span><span style=\"color:#EEF0F9\">,</span></span>\n<span class=\"line\"><span style=\"color:#4BF3C8\">  headers</span><span style=\"color:#EEF0F9\">: {</span></span>\n<span class=\"line\"><span style=\"color:#4BF3C8\">    Authorization</span><span style=\"color:#EEF0F9\">: </span><span style=\"color:#FFD493\">`Bearer </span><span style=\"color:#54B9FF\">${</span><span style=\"color:#4BF3C8\">process</span><span style=\"color:#EEF0F9\">.</span><span style=\"color:#4BF3C8\">env</span><span style=\"color:#EEF0F9\">.</span><span style=\"color:#ACAFFF\">SUPABASE_ANON_KEY</span><span style=\"color:#54B9FF\">}</span><span style=\"color:#FFD493\">`</span><span style=\"color:#EEF0F9\">,</span></span>\n<span class=\"line\"><span style=\"color:#EEF0F9\">  },</span></span>\n<span class=\"line\"><span style=\"color:#EEF0F9\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#54B9FF\">export</span><span style=\"color:#54B9FF\"> async</span><span style=\"color:#54B9FF\"> function</span><span style=\"color:#00DAEF\"> getUserPlaylists</span><span style=\"color:#EEF0F9\">(</span><span style=\"color:#4BF3C8;font-style:italic\">userId</span><span style=\"color:#EEF0F9\">: </span><span style=\"color:#ACAFFF\">string</span><span style=\"color:#EEF0F9\">) {</span></span>\n<span class=\"line\"><span style=\"color:#54B9FF\">  const</span><span style=\"color:#EEF0F9\"> { </span><span style=\"color:#ACAFFF\">data</span><span style=\"color:#EEF0F9\">, </span><span style=\"color:#ACAFFF\">error</span><span style=\"color:#EEF0F9\"> } = </span><span style=\"color:#54B9FF\">await</span><span style=\"color:#4BF3C8\"> supabaseClient</span></span>\n<span class=\"line\"><span style=\"color:#EEF0F9\">    .</span><span style=\"color:#00DAEF\">from</span><span style=\"color:#EEF0F9\">(</span><span style=\"color:#FFD493\">'playlists'</span><span style=\"color:#EEF0F9\">)</span></span>\n<span class=\"line\"><span style=\"color:#EEF0F9\">    .</span><span style=\"color:#00DAEF\">select</span><span style=\"color:#EEF0F9\">(</span><span style=\"color:#FFD493\">'*'</span><span style=\"color:#EEF0F9\">)</span></span>\n<span class=\"line\"><span style=\"color:#EEF0F9\">    .</span><span style=\"color:#00DAEF\">eq</span><span style=\"color:#EEF0F9\">(</span><span style=\"color:#FFD493\">'userId'</span><span style=\"color:#EEF0F9\">, </span><span style=\"color:#4BF3C8\">userId</span><span style=\"color:#EEF0F9\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#54B9FF\">  if</span><span style=\"color:#EEF0F9\"> (</span><span style=\"color:#4BF3C8\">error</span><span style=\"color:#EEF0F9\">) {</span></span>\n<span class=\"line\"><span style=\"color:#4BF3C8\">    console</span><span style=\"color:#EEF0F9\">.</span><span style=\"color:#00DAEF\">error</span><span style=\"color:#EEF0F9\">(</span><span style=\"color:#FFD493\">'Error fetching playlists:'</span><span style=\"color:#EEF0F9\">, </span><span style=\"color:#4BF3C8\">error</span><span style=\"color:#EEF0F9\">)</span></span>\n<span class=\"line\"><span style=\"color:#54B9FF\">    return</span><span style=\"color:#EEF0F9\"> []</span></span>\n<span class=\"line\"><span style=\"color:#EEF0F9\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#54B9FF\">  return</span><span style=\"color:#4BF3C8\"> data</span></span>\n<span class=\"line\"><span style=\"color:#EEF0F9\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>By leveraging Supabase's auto-generated APIs, playQ developers can focus on building a compelling user interface and implementing core business logic, while relying on Supabase to handle the intricacies of backend development securely and efficiently.</p>\n<h3>Integrating Supabase with the playQ Tech Stack</h3>\n<p>While Supabase serves as the backbone of playQ, the application's architecture also incorporates several other cutting-edge technologies to deliver a seamless and engaging user experience. Here's a breakdown of the key components of playQ's tech stack:</p>\n<table>\n<thead>\n<tr>\n<th>Technology</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Remix</td>\n<td>A cutting-edge web framework for React that prioritizes user experience and efficient data loading.</td>\n</tr>\n<tr>\n<td>React</td>\n<td>A popular JavaScript library for building reusable UI components and efficient user interfaces.</td>\n</tr>\n<tr>\n<td>DrizzleORM</td>\n<td>An Object-Relational Mapping (ORM) tool that simplifies data operations by mapping JavaScript objects to database tables.</td>\n</tr>\n<tr>\n<td>Radix-UI</td>\n<td>A low-level, accessible, and unstyled UI component library designed for building high-quality web interfaces.</td>\n</tr>\n<tr>\n<td>ShaD/CN</td>\n<td>A modern and minimalist aesthetic for styled-components, influencing the overall UI design of playQ.</td>\n</tr>\n</tbody>\n</table>\n<p>By seamlessly integrating Supabase with this carefully curated tech stack, playQ delivers a robust and scalable solution that combines efficient coding practices, superior performance, and an unparalleled user experience.</p>\n<h3>Conclusion</h3>\n<p>playQ exemplifies the power of modern web development technologies and the role they play in creating engaging and innovative applications. By leveraging Supabase's robust features and seamlessly integrating it with a cutting-edge tech stack, playQ redefines the way gamers interact with their collections and fosters a more immersive and social gaming experience.</p>\n<p>As the gaming industry continues to evolve, solutions like playQ demonstrate the potential of open-source platforms and the synergy achieved by combining the right tools and frameworks. With its intuitive interface, comprehensive rating system, and social networking capabilities, playQ empowers gamers to curate, discover, and share their gaming experiences like never before.</p>",
    "coverImageUrl": "https://images.unsplash.com/photo-1536244292405-630fd4dd38a2?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2848&q=80",
    "date": "2024-03-06",
    "author": {
      "name": "Callum Kloos",
      "imageUrl": "/avatar.jpeg"
    },
    "tags": [
      "web development",
      "backend"
    ],
    "slug": "unleashing-the-power-of-supabase-with-playq-a-gamechanging-video-game-playlist-manager"
  }
]